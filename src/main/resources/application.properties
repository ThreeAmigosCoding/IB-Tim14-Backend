# Database setup
spring.datasource.url=jdbc:mysql://localhost:3306/certificatesdb?useSSL=true&requireSSL=true&serverSslCert=database_server_keystore.p12

spring.datasource.username=root
spring.datasource.password=root123

spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.show-sql = false

spring.sql.init.mode = always
spring.jpa.defer-datasource-initialization=true

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# Email sending properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=x509certificatemanager@gmail.com
spring.mail.password=nmxqfalyqgafkjke
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# File size
spring.servlet.multipart.max-file-size=1048576

# HTTPS setup
server.port=8443

server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:client_server_keystore.p12
server.ssl.key-store-password=server123
server.ssl.key-alias=client_server_crt


spring.security.oauth2.client.registration.google.client-id=96421338403-0sitlpac3lgt8a5smi427spjfcvvs115.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.scope=openid,email,profile
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
#spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub